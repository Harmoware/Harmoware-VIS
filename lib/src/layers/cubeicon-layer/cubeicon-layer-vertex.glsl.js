// Inspired by screen-grid-layer vertex shader in deck.gl
export default "#define SHADER_NAME cubeicon-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec3 normals;\n\nattribute vec4 instancePositions;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\n\n// Custom uniforms\nuniform float extruded;\nuniform float cellSize;\nuniform float coverage;\nuniform float opacity;\n\n// A magic number to scale elevation so that 1 unit approximate to 1 meter\n#define ELEVATION_SCALE 0.5\n\n// Result\nvarying vec4 vColor;\nvarying vec2 vInstanceInfo;\n\nvoid main(void) {\n\n  vec4 topLeftPos = project_position(instancePositions);\n\n  // if ahpha == 0.0 or z < 0.0, do not render element\n  float noRender = float(instanceColors.a == 0.0 || instancePositions.w < 0.0);\n  float finalCellSize = project_scale(cellSize) * mix(1.0, 0.0, noRender);\n  float center = finalCellSize / 2.0;\n\n  // cube gemoetry vertics are between -1 to 1, scale and transform it to between 0, 1\n  vec3 pos = vec3(vec2(topLeftPos.xy + vec2(\n    (positions.x * coverage + 1.0) / 2.0 * finalCellSize,\n    (positions.y * coverage - 1.0) / 2.0 * finalCellSize) + vec2(center * -1.0, center)),\n    topLeftPos.z);\n\n  float elevation = 0.0;\n\n  if (extruded > 0.5) {\n    elevation = project_scale(topLeftPos.w  * (positions.z + 1.0) * ELEVATION_SCALE);\n  }\n\n  // extrude positions\n  vec4 position_worldspace = vec4(pos.xy, elevation + pos.z + 1.0, 1.0);\n  gl_Position = project_to_clipspace(position_worldspace);\n\n  float lightWeight = 1.0;\n\n  if (extruded > 0.5) {\n    lightWeight = getLightWeight(\n      position_worldspace.xyz, // the w component is always 1.0\n      normals\n    );\n  }\n\n  vec3 lightWeightedColor = lightWeight * instanceColors.rgb;\n  vec4 color = vec4(lightWeightedColor, instanceColors.a * opacity) / 255.0;\n  vColor = color;\n  vInstanceInfo = vec2(instanceColors.a,instancePositions.w);\n\n  // Set color to be rendered to picking fbo (also used to check for selection highlight).\n  picking_setPickingColor(instancePickingColors);\n}\n";
//# sourceMappingURL=cubeicon-layer-vertex.glsl.js.map